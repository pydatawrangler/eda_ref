x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species",
caption = "Data come from the palmerpenguins package."
) +
scale_color_colorblind()
ggplot(
data=penguins,
mapping=aes(x=bill_length_mm, y=bill_depth_mm)
) +
geom_point()
ggplot(
data=penguins,
mapping=aes(x=flipper_length_mm, y=body_mass_g)
) +
geom_point(mapping=aes(color=bill_depth_mm)) +
geom_smooth()
ggplot() +
geom_point(
data=penguins,
mapping=aes(x=flipper_length_mm, y=body_mass_g)
) +
geom_smooth(
data=penguins,
mapping=aes(x=flipper_length_mm, y=body_mass_g),
se=FALSE
)
# thru Section 2.2
df <- penguins
View(df)
library(tidyverse)
ggplot(diamonds, aes(x = carat, y = price)) +
geom_hex()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_hex()
ggsave("diamonds.png")
write_csv(diamonds, "data/diamonds.csv")
write_csv(diamonds, "data/diamonds.csv")
library(tidyverse)
students <- read_csv("data/students.csv")
students
students <- read_csv("data/students.csv", na=c("N/A", ""))
students
students
students |>
rename(
student_id = `Student ID`,
full_name = `Full Name`
)
students |> janitor::clean_names()
students |>
janitor::clean_names() |>
mutate(meal_plan = factor(meal_plan))
students |>
janitor::clean_names() |>
mutate(meal_plan = factor(meal_plan),
age = parse_number(if_else(age == "five", "5", age)))
read_csv(
"a,b,c
1,2,3
4,5,6"
)
read_csv(
"The first line of metadata
The second line of metadata
x,y,z
1,2,3",
skip = 2
)
read_csv(
"# A comment I want to skip
x,y,z
1,2,3",
comment = "#"
)
read_csv(
"1,2,3
4,5,6",
col_names = FALSE
)
read_csv(
"1,2,3
4,5,6",
col_names = c("x", "y", "z")
)
sales_files <- c("data/01-sales.csv","data/01-sales.csv","data/01-sales.csv")
read_csv(sales_files, id="file")
sales_files <- c("data/01-sales.csv","data/02-sales.csv","data/03-sales.csv")
read_csv(sales_files, id="file")
sales_files <- list.files("data", pattern = "sales\\.csv$", full.names = TRUE)
sales_files
students
students <- read_csv("data/students.csv")
students
write_csv(students, "data/students-2.csv")
read_csv("data/students-2.csv")
students <- read_csv("data/students.csv") |>
mutate(meal_plan = factor(meal_plan))
read_csv("data/students.csv")
students <- read_csv("data/students.csv") |>
janitor::clean_names() |>
mutate(meal_plan = factor(meal_plan))
students
write_csv(students, "data/students-2.csv")
read_csv("data/students-2.csv")
write_rds(students, "data/students.rds")
read_rds("data/students.rds")
library(arrow)
install.packages("arrow")
library(arrow)
write_parquet(students, "data/students.parquet")
read_parquet("data/students.parquet")
students <- readRDS("~/GithubRepos/eda_ref/r4ds/data/students.rds")
library(tidyverse)
mpg
ggplot(mpg, aes(x = displ, y = hwy, color = class)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, shape = class)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, size = class)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy, alpha = class)) +
geom_point()
# 1
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(shape = 24, color= "pink")
# 1
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(shape = 17, color= "pink")
# 2
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, color = "blue"))
# 2
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) #, color = "blue"))
# 2
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, color = "red"))
# 2
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, color = "blue"))
# 3
?geom_point
# 2
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy, fill = "blue"))
# 4
ggplot(mpg, aes(x = displ, y = hwy, color = displ < 5)) +
geom_point()
# 2
ggplot(mpg, color = 'blue') +
geom_point(aes(x = displ, y = hwy)) # , fill = "blue"))
ggplot(mpg, aes(x = displ, y = hwy, linetype = drv)) +
geom_smooth()
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(aes(linetype = drv))
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = class)) +
geom_smooth()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_point(
data = mpg |> filter(class == "2seater"),
color = "red"
) +
geom_point(
data = mpg |> filter(class == "2seater"),
shape = "circle open", size = 3, color = "red"
)
ggplot(mpg, aes(x = hwy)) +
geom_histogram(binwidth = 2)
ggplot(mpg, aes(x = hwy)) +
geom_density()
ggplot(mpg, aes(x = hwy)) +
geom_boxplot()
library(ggridges)
ggplot(mpg, aes(x = hwy, y = drv, fill = drv, color = drv)) +
geom_density_ridges(alpha = 0.5, show.legend = TRUE)
ggplot(mpg, aes(x = hwy, y = drv, fill = drv, color = drv)) +
geom_density_ridges(alpha = 0.5, show.legend = FALSE)
ggplot(mpg, aes(x = hwy)) +
geom_area()
ggplot(mpg, aes(x = hwy, y = displ)) +
geom_area()
ggplot(mpg, aes(x = hwy, y = displ), color = drv) +
geom_area()
ggplot(mpg, aes(x = hwy, y = displ, color = drv)) +
geom_area()
ggplot(mpg, aes(x = hwy, y = displ, fill = drv)) +
geom_area()
ggplot(mpg, aes(x = hwy, y = displ, fill = drv)) +
geom_line()
ggplot(mpg, aes(x = hwy, y = displ, color = drv)) +
geom_line()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(group = drv, se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(aes(group = drv), se = FALSE))
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth(aes(group = drv), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(aes(group = drv), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(aes(color = drv), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(se = FALSE) #(aes(color = drv), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
geom_smooth(aes(linetype = drv), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv, stroke = 2)) +
geom_smooth(aes(linetype = drv), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv, stroke = 2, fill = "white")) +
geom_smooth(aes(linetype = drv), se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv))
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(fill = drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(aes(fill = drv))
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(aes(stroke = "white"))
ggplot(mpg, aes(x = displ, y = hwy, color = "white")) +
geom_point()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(shape = 21, fill = "red")
ggplot(mpg, aes(x = displ, y = hwy, stroke = 5)) +
geom_point(shape = 21, fill = "red")
ggplot(mpg, aes(x = displ, y = hwy, stroke = 5, fill = "white")) +
geom_point(shape = 21, fill = "red")
ggplot(mpg, aes(x = displ, y = hwy, stroke = 5)) +
geom_point(shape = 21, fill = "red", color = "white")
ggplot(mpg, aes(x = displ, y = hwy, stroke = 5)) +
geom_point(shape = 21, fill = drv, color = "white")
ggplot(mpg, aes(x = displ, y = hwy, stroke = 5, fill = drv)) +
geom_point(shape = 21, color = "white")
ggplot(mpg, aes(x = displ, y = hwy, stroke = 1, fill = drv)) +
geom_point(shape = 21, color = "white")
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap(~cyl)
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point() +
facet_wrap(~cyl)
mpg
ggplot(mpg, aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_wrap(~cyl)
ggplot(mpg |> mutate(year = factor(year)), aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_wrap(~cyl)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl)
ggplot(mpg |> mutate(year = factor(year)), aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_grid(drv ~ cyl)
ggplot(mpg |> mutate(year = factor(year)), aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_grid(drv ~ cyl, scales = "free_y")
ggplot(mpg, aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_wrap(~year)
ggplot(mpg, aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_wrap(~hwy)
ggplot(mpg, aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_wrap(~drv)
ggplot(mpg |> mutate(year = factor(year)), aes(x = displ, y = hwy, color = year)) +
geom_point() +
facet_grid(drv ~ cyl, scales = "free_y")
ggplot(mpg) +
geom_point(aes(x = drv, y = cyl))
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(mpg) +
geom_point(aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(mpg, aes(x = displ)) +
geom_histogram() +
facet_grid(drv ~ .)
ggplot(mpg, aes(x = displ)) +
geom_histogram() +
facet_grid(. ~ drv)
ggplot(diamonds, aes(x = cut)) +
geom_bar()
?geom_bar
?geom_point
diamonds |>
count(cut)
?geom_bar
?after_stat
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 2)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds) +
stat_summary(
aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median
)
diamonds
?stat_summary
ggplot(diamonds, aes(x = cut, y = depth)) +
geom_pointrange()
ggplot(diamonds, aes(x = cut, y = depth)) +
geom_pointrange(ymin = fun.min, ymax = fun.max)
ggplot(diamonds, aes(x = cut, y = depth)) +
geom_pointrange(ymin = min(depth), ymax = max(depth))
?geom_pointrange
ggplot(diamonds, aes(x = cut, y = depth)) +
geom_pointrange(ymin = depth, ymax = depth)
ggplot(diamonds, aes(x = cut, y = depth)) +
geom_pointrange(aes(ymin = depth, ymax = depth))
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut, fill = color, y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut, fill = color, y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut, fill = color, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, fill = color, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop), group = 5)) +
geom_bar()
glimpse(diamonds)
ggplot(diamonds, aes(x = cut, fill = color, y = after_stat(prop))) +
geom_bar()
ggplot(diamonds, aes(x = cut, fill = color, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, color = color, y = after_stat(prop), group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, y = after_stat(prop), fill = color, group = 1)) +
geom_bar()
ggplot(diamonds, aes(x = cut, fill = color)) +
geom_bar()
ggplot(diamonds, aes(x = cut, fill = color)) +
geom_bar(aes(y = after_stat(prop)))
ggplot(diamonds, aes(x = cut, fill = color)) +
geom_bar()
View(diamonds)
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "fill")
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar(position = "dodge")
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(position = "jitter")
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
mpg
ggplot(mpg, aes(x = cty, y = hwy, fill = class)) +
geom_point()
ggplot(mpg |> mutate(class = factor(class)), aes(x = cty, y = hwy, fill = class)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy, fill = class)) +
geom_bar()
ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
geom_point()
ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
facet_wrap(~class)
ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
geom_point() +
facet_wrap(~class)
nz <- map_data("nz")
ggplot(nz, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
ggplot(nz, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black") +
coord_quickmap()
bar <- ggplot(data = diamonds) +
geom_bar(
mapping = aes(x = clarity, fill = clarity),
show.legend = FALSE,
width = 1
) +
theme(aspect.ratio = 1)
bar
bar + coord_flip()
bar + coord_polar()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
library(tidyverse)
ggplot(diamonds, aes(x = carat)) +
geom_histogram(binwidth = 0.5)
diamonds
smaller <- diamonds |>
filter(carat < 3)
ggplot(smaller, aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(diamonds, aes(x = y)) +
geom_histogram(binwidth = 0.5)
?diamonds
ggplot(diamonds, aes(x = y)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
unusual <- diamonds |>
filter(y < 3 | y > 20) |>
select(price, x, y, z) |>
arrange(y)
unusual
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 100)
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 100) +
xlim(0, 1000)
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 10) +
xlim(0, 1000)
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 20) +
xlim(0, 1000)
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 20) +
coord_cartesian(xlim = c(0, 1000))
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
coord_cartesian(xlim = c(0, 1000))
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 100) +
coord_cartesian(xlim = c(0, 1000))
diamonds2 <- diamonds |>
mutate(y = if_else(y < 3 | y > 20, NA, y))
ggplot(diamonds2, aes(x = x, y = y)) +
geom_point()
ggplot(diamonds2, aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
nycflights13::flights
flights <- nycflights13::flights
View(flights)
flights$sched_dep_time
flights$sched_dep_time %/% 100
flights$sched_dep_time %% 100
?geom_freqpoly
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min /60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(color = cancelled))
ggplot(diamonds, aes(x = price)) +
geom_freqpoly(aes(color = cut), binwidth = 500, linewidth = 0.75)
ggplot(diamonds, aes(x = price, y = after_stat(density))) +
geom_freqpoly(aes(color = cut), binwidth = 500, linewidth = 0.75)
ggplot(diamonds, aes(x = cut, y = price)) +
geom_boxplot()
ggplot(mpg, aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(mpg, aes(x = fct_reorder(class, hwy, median), y = hwy)) +
geom_boxplot()
ggplot(mpg, aes(y = fct_reorder(class, hwy, median), x = hwy)) +
geom_boxplot()
ggplot(mpg, aes(x = fct_reorder(class, hwy, median), y = hwy)) +
geom_boxplot() +
coord_flip()
ggplot(diamonds, aes(y = price)) +
geom_point() +
facet_wrap(. ~ price)
glimpse(diamonds)
library(ggridges)
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point()
ggplot(diamonds, aes(x = cut, y = price)) +
geom_point()
ggplot(diamonds, aes(x = color, y = price)) +
geom_point()
ggplot(diamonds, aes(x = clarity, y = price)) +
geom_point()
ggplot(diamonds, aes(x = depth, y = price)) +
geom_point()
ggplot(diamonds, aes(x = table, y = price)) +
geom_point()
ggplot(diamonds, aes(x = x, y = price)) +
geom_point()
ggplot(diamonds, aes(x = y, y = price)) +
geom_point()
ggplot(diamonds, aes(x = z, y = price)) +
geom_point()
ggplot(diamonds, aes(x = cut, y = carat)) +
geom_point()
ggplot(diamonds, aes(x = carat, y = price, color = cut)) +
geom_point()
