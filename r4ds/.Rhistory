library(tidyverse)
ggplot(diamonds, aes(x = carat)) +
geom_histogram(binwidth = 0.5)
smaller <- diamonds |>
filter(carat < 3)
ggplot(smaller, aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(diamonds, aes(x = y)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
unusual <- diamonds |>
filter(y < 3 | y > 20) |>
select(price, x, y, z) |>
arrange(y)
unusual
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 100) +
coord_cartesian(xlim = c(0, 1000))
diamonds2 <- diamonds |>
mutate(y = if_else(y < 3 | y > 20, NA, y))
ggplot(diamonds2, aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min /60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(color = cancelled))
flights <- nycflights13::flights
flights$sched_dep_time %% 100
?geom_freqpoly
ggplot(diamonds, aes(x = price, y = after_stat(density))) +
geom_freqpoly(aes(color = cut), binwidth = 500, linewidth = 0.75)
ggplot(diamonds, aes(x = cut, y = price)) +
geom_boxplot()
ggplot(mpg, aes(x = fct_reorder(class, hwy, median), y = hwy)) +
geom_boxplot() +
coord_flip()
library(ggridges)
ggplot(diamonds, aes(x = carat, y = price, color = cut)) +
geom_point()
ggplot(diamonds, aes(x=cut, y=color)) +
geom_count()
diamonds |>
count(color, cut) |>
ggplot(aes(x=color, y=cut)) +
geom_tile(aes(fill=n))
ggplot(smaller, aes(x=carat, y=price)) +
geom_point(alpha=1/100)
library(hexbin)
ggplot(smaller, aes(x=carat, y=price)) +
geom_bin2d()
ggplot(smaller, aes(x=carat, y=price)) +
geom_hex()
ggplot(smaller, aes(x=carat, y=price)) +
geom_boxplot(group = cut_width(carat, 0.1))
ggplot(smaller, aes(x=carat, y=price)) +
geom_boxplot(aes(group = cut_width(carat, 0.1)))
ggplot(smaller, aes(x=carat, y=price)) +
geom_boxplot(aes(group = cut_width(carat, 0.5)))
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
library(tidyverse)
ggplot(diamonds, aes(x = carat)) +
geom_histogram(binwidth = 0.5)
smaller <- diamonds |>
filter(carat < 3)
ggplot(smaller, aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(diamonds, aes(x = y)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50))
unusual <- diamonds |>
filter(y < 3 | y > 20) |>
select(price, x, y, z) |>
arrange(y)
unusual
ggplot(diamonds, aes(x = price)) +
geom_histogram(binwidth = 100) +
coord_cartesian(xlim = c(0, 1000))
diamonds2 <- diamonds |>
mutate(y = if_else(y < 3 | y > 20, NA, y))
ggplot(diamonds2, aes(x = x, y = y)) +
geom_point(na.rm = TRUE)
nycflights13::flights |>
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + (sched_min /60)
) |>
ggplot(aes(x = sched_dep_time)) +
geom_freqpoly(aes(color = cancelled))
flights <- nycflights13::flights
flights$sched_dep_time %% 100
?geom_freqpoly
ggplot(diamonds, aes(x = price, y = after_stat(density))) +
geom_freqpoly(aes(color = cut), binwidth = 500, linewidth = 0.75)
ggplot(diamonds, aes(x = cut, y = price)) +
geom_boxplot()
ggplot(mpg, aes(x = fct_reorder(class, hwy, median), y = hwy)) +
geom_boxplot() +
coord_flip()
library(ggridges)
ggplot(diamonds, aes(x = carat, y = price, color = cut)) +
geom_point()
ggplot(diamonds, aes(x=cut, y=color)) +
geom_count()
diamonds |>
count(color, cut) |>
ggplot(aes(x=color, y=cut)) +
geom_tile(aes(fill=n))
ggplot(smaller, aes(x=carat, y=price)) +
geom_point(alpha=1/100)
ggplot(smaller, aes(x=carat, y=price)) +
geom_bin2d()
ggplot(smaller, aes(x=carat, y=price)) +
geom_hex()
ggplot(smaller, aes(x=carat, y=price)) +
geom_boxplot(aes(group = cut_width(carat, 0.5)))
library(tidymodels)
diamonds |>
mutate(
log_price = log(price),
log_carat = log(carat)
)
diamonds <- diamonds |>
mutate(
log_price = log(price),
log_carat = log(carat)
)
diamonds_fit <- linear_reg() |>
fit(log_price ~ log_carat, data=diamonds)
augment?
?augment
diamonds_aug <- augment(diamonds_fit, new_data = diamonds) |>
mutate(.resid = exp(.resid))
View(diamonds_aug)
ggplot(diamonds_aug, aes(x=carat, y=.resid)) +
geom_point()
ggplot(diamonds_aug, aes(x=cut, y=.resid)) +
geom_boxplot()
library(tidyverse)
library(scales)
library(ggrepel)
library(patchwork)
ggplot(mpg, aes(x=displ, y=hwy)) +
geom_point(aes(color=class)) +
geom_smooth(se=FALSE)
ggplot(mpg, aes(x=displ, y=hwy)) +
geom_point(aes(color=class)) +
geom_smooth(se=FALSE) +
labs(
x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
color = "Car type",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov"
)
?plotmath
df <- tibble(
x = 1:10,
y = cumsum(x^2)
)
View(df)
ggplot(df, aes(x, y)) +
geom_point() +
labs(
x = quote(x[i]),
y = quote(sum(x[i]^2, i==1, n))
)
label_info <- mpg |>
group_by(drv) |>
arrange(desc(displ)) |>
slice_head(n=1)
View(label_info)
label_info <- mpg |>
group_by(drv) |>
arrange(desc(displ)) |>
slice_head(n=1) |>
mutate(
drive_type = case_when(
drv == "f" ~ "front-wheel drive",
drv == "r" ~ "rear-wheel drive",
drv == "4" ~ "4-wheel drive"
)
) |>
select(displ, hwy, drv, drive_type)
label_info
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3)
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE)
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_text(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, hjust="right", vjust="bottom"
)
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_text(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, hjust="right", vjust="bottom"
) +
theme(legend.position = "none")
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_label_repel(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, nudge_y = 2
) +
theme(legend.position = "none")
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_label_repel(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, nudge_y = 2
) +
theme(legend.position = "none")
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_label_repel(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, nudge_y = 2
) +
theme(legend.position = "none")
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_label_repel(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, nudge_y = 3
) +
theme(legend.position = "none")
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_label_repel(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, nudge_y = 4
) +
theme(legend.position = "none")
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_label_repel(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, nudge_y = 1
) +
theme(legend.position = "none")
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point(alpha = 0.3) +
geom_smooth(se = FALSE) +
geom_label_repel(
data = label_info,
aes(x = displ, y = hwy, label = drive_type),
fontface = "bold", size=5, nudge_y = 1.5
) +
theme(legend.position = "none")
potential_outliers <- mpg |>
filter(hwy > 40 | (hwy > 20 & displ > 5))
potential_outliers
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(28) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(aes(y = 28)) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
?geom_hline
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(yintecept = 28)) +
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(yintecept = 28) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(aes(yintecept = 28)) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(yintercept = 28) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(yintercept = 28, color = "white", linewidth = 2) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_hline(yintercept = 28, color = "dark gray", linewidth = 2) +
geom_point() +
geom_text_repel(data = potential_outliers, aes(label = model)) +
geom_point(data = potential_outliers, color = "red") +
geom_point(
data = potential_outliers,
color = "red", size = 3, shape = "circle open"
)
trend_text <- "Larger engine sizes tend to have lower fuel economy." |>
str_wrap(width = 30)
trend_text
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
annotate(
geom = "label", x = 3.5, y = 38,
label = trend_text,
hjust = "left",
color = "red"
) +
annotate(
geom = "segment",
x = 3, y = 35, xend = 5, yend = 25, color = "red",
arrow = arrow(type = "closed")
)
ggplot(diamonds, aes(x = price, y = cut)) +
geom_boxplot(alpha = 0.05) +
scale_x_continuous(
labels = label_dollar(scale = 1/1000, suffix = "K"),
breaks = seq(1000, 19000, by = 6000)
)
ggplot(diamonds, aes(x = cut, fill = clarity)) +
geom_bar(position = "fill") +
scale_y_continuous(name = "Percentage", labels = label_percent())
presidential |>
mutate(id = 33 + row_number())
presidential
presidential |>
mutate(id = 33 + row_number()) |>
ggplot(aes(x = start, y = id)) +
geom_point()
presidential |>
mutate(id = 33 + row_number()) |>
ggplot(aes(x = start, y = id)) +
geom_point() +
geom_segment(aes(xend = end, yend = id))
presidential |>
mutate(id = 33 + row_number()) |>
ggplot(aes(x = start, y = id)) +
geom_point() +
geom_segment(aes(xend = end, yend = id)) +
scale_x_date(name = NULL, breaks = presidential$start, date_labels = "'%y")
ggplot(diamonds, aes(x = log10(carat), y = log10(price))) +
geom_bin2d()
ggplot(diamonds, aes(x = carat, y = price)) +
geom_bin2d() +
scale_x_log10() +
scale_y_log10()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv)) +
scale_color_brewer(palette = "Set1")
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = drv, shape = drv)) +
scale_color_brewer(palette = "Set1")
presidential |>
mutate(id = 33 + row_number()) |>
ggplot(aes(x = start, y = id, color = party)) +
geom_point() +
geom_segment(aes(xend = end, yend = id)) +
scale_x_date(name = NULL, breaks = presidential$start, date_labels = "'%y")
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = class))
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
theme_bw()
p1 <- ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
labs(title = "Plot 1")
p2 <- ggplot(mpg, aes(x = displ, y = hwy)) +
geom_boxplot() +
labs(title = "Plot 2")
p1 + p2
p1 <- ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
labs(title = "Plot 1")
p2 <- ggplot(mpg, aes(x = drv, y = hwy)) +
geom_boxplot() +
labs(title = "Plot 2")
p1 + p2
p1 <- ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
labs(title = "Plot 1")
p2 <- ggplot(mpg, aes(x = drv, y = hwy)) +
geom_boxplot() +
labs(title = "Plot 2")
p3 <- ggplot(mpg, aes(x = cty, y = hwy)) +
geom_point() +
labs(title = "Plot 3")
(p1 | p3) / p2
install.packages("tidytuesdayR")
library(tidytuesdayR)
tt_load('2023-08-01')
tt <- tt_load('2023-08-01')
tt$states
tt$state_name_etymology
tt$state_name_etymology |> tail()
tt$state_name_etymology |> tail() |> select(meaning)
library(tidyverse)
tt$state_name_etymology |> tail() |> select(meaning)
tt_load("2018-04-03")
tt_load("2018-04-02")
tt_load("2018-04-02")$us_avg_tuition
tt_load("2018-04-02")$us_avg_tuition |> tail()
tt_load("2018-04-02")
library(tidyverse)
library(nycflights13)
install.packages("tidyverse")
library(tidyverse)
library(nycflights13)
x <- c(1, 2, 3, 5, 7, 11, 13)
x * 2
df <- tibble(x)
df |>
mutate(y = x * 2)
flights |>
filter(dep_time > 600 & dep_time < 2000 & abs(arr_delay) < 20)
flights |>
mutate(
daytime = dep_time > 600 & dep_time < 2000,
approx_ontime = abs(arr_delay) < 20,
.keep = "used"
)
flights |>
mutate(
daytime = dep_time > 600 & dep_time < 2000,
approx_ontime = abs(arr_delay) < 20,
) |>
filter(daytime & approx_ontime)
x <- c(1 / 49 * 49, sqrt(2) ^ 2)
x
x == c(1, 2)
print(x, digits = 16)
near(x, c(1, 2))
?near
.Machine$double.eps^0.5
.Machine
NA > 5
10 == NA
NA == NA
is.na(c(TRUE, NA, FALSE))
is.na(c(1, NA, 3))
is.na(c("a", NA, "b"))
flights |>
filter(is.na(dep_time))
flights |>
filter(month == 1, day = 1) |>
arrange(dep_time)
flights |>
filter(month == 1, day == 1) |>
arrange(dep_time)
flights |>
filter(month == 1, day == 1) |>
arrange(desc(is.na(dep_time)), dep_time)
